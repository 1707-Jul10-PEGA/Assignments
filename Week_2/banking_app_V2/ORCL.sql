/*******************************************************************************
   Drop database if it exists
********************************************************************************/
DROP USER banking_app CASCADE;


/*******************************************************************************
   Create database
********************************************************************************/
CREATE USER banking_app
IDENTIFIED BY p4ssw0rd
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;

GRANT connect to banking_app;
GRANT resource to banking_app;
GRANT create session TO banking_app;
GRANT create table TO banking_app;
GRANT create view TO banking_app;



conn banking_app/p4ssw0rd



--CREATE TABLES
DROP TABLE BANKING_APP.ACCOUNT;
DROP TABLE BANKING_APP.ADMIN;
DROP TABLE BANKING_APP.CUSTOMER;
DROP TABLE BANKING_APP.EMPLOYEE;
DROP TABLE BANKING_APP.USERPASS;
DROP TABLE BANKING_APP.LOG;

CREATE TABLE USERPASS
(
    USERNAME VARCHAR2(20) PRIMARY KEY,
    TYPE VARCHAR(8) NOT NULL
);

CREATE TABLE ADMIN
(
    ID INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(20) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(20) NOT NULL,
    FIRSTNAME VARCHAR2(20) NOT NULL,
    LASTNAME VARCHAR2(20) NOT NULL,
    CONSTRAINT FK_ADMIN_USERPASS FOREIGN KEY (USERNAME) REFERENCES USERPASS (USERNAME)
);

CREATE TABLE EMPLOYEE
(
    ID INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(20) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(20) NOT NULL,
    FIRSTNAME VARCHAR2(20) NOT NULL,
    LASTNAME VARCHAR2(20) NOT NULL,
    CONSTRAINT FK_EMPLOYEE_USERPASS FOREIGN KEY (USERNAME) REFERENCES USERPASS (USERNAME)
);

CREATE TABLE CUSTOMER
(
    ID INTEGER PRIMARY KEY,
    USERNAME VARCHAR2(20) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(20) NOT NULL,
    FIRSTNAME VARCHAR2(20) NOT NULL,
    LASTNAME VARCHAR2(20) NOT NULL,
    EMPLOYEE INTEGER NOT NULL,
    CONSTRAINT FK_CUSTOMER_USERPASS FOREIGN KEY (USERNAME) REFERENCES USERPASS (USERNAME),
    CONSTRAINT FK_CUSTOMER_EMPLOYEE FOREIGN KEY (EMPLOYEE) REFERENCES EMPLOYEE (ID)
);

CREATE TABLE ACCOUNT
(
    ID INTEGER PRIMARY KEY,
    CUSTOMER INTEGER NOT NULL,
    TYPE VARCHAR2(8) NOT NULL,
    BALANCE NUMBER(10,2) NOT NULL,
    APPLIED NUMBER(1) NOT NULL,
    APPROVED NUMBER(1) NOT NULL,
    CONSTRAINT FK_ACCOUNT_CUSTOMER FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMER (ID)
);

CREATE TABLE LOG
(
    TSTAMP VARCHAR2(19) NOT NULL,
    USERINVOLVED VARCHAR2(20) NOT NULL,
    ACCOUNTINVOLVED INTEGER NOT NULL,
    AMOUNT NUMBER(10,2),
    ACTION VARCHAR2(20) NOT NULL
);

--CREATE SEQUENCES

DROP SEQUENCE ADMIN_SEQUENCE;
DROP SEQUENCE EMPLOYEE_SEQUENCE;
DROP SEQUENCE CUSTOMER_SEQUENCE;

CREATE SEQUENCE  ADMIN_SEQUENCE  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE EMPLOYEE_SEQUENCE MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE CUSTOMER_SEQUENCE MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1;

--CREATE TRIGGERS

CREATE OR REPLACE TRIGGER ADMIN_INSERT_TRIGGER
    BEFORE INSERT ON ADMIN
    FOR EACH ROW
    BEGIN
        IF :NEW.ID IS NULL THEN
            SELECT ADMIN_SEQUENCE.NEXTVAL INTO :NEW.ID FROM DUAL;
        END IF;
        INSERT INTO USERPASS VALUES (:NEW.USERNAME, 'Admin');
END;
/

CREATE OR REPLACE TRIGGER EMPLOYEE_INSERT_TRIGGER
    BEFORE INSERT ON EMPLOYEE
    FOR EACH ROW
    BEGIN
        IF :NEW.ID IS NULL THEN
            SELECT EMPLOYEE_SEQUENCE.NEXTVAL INTO :NEW.ID FROM DUAL;
        END IF;
        INSERT INTO USERPASS VALUES (:NEW.USERNAME, 'Employee');
END;
/

CREATE OR REPLACE TRIGGER CUSTOMER_INSERT_TRIGGER
    BEFORE INSERT ON CUSTOMER
    FOR EACH ROW
    BEGIN
        IF :NEW.ID IS NULL THEN
            SELECT CUSTOMER_SEQUENCE.NEXTVAL INTO :NEW.ID FROM DUAL;
        END IF;
        INSERT INTO USERPASS VALUES (:NEW.USERNAME, 'Customer');
END;
/

CREATE OR REPLACE TRIGGER ADMIN_DELETE_TRIGGER
    BEFORE DELETE ON ADMIN
    FOR EACH ROW
    BEGIN
        DELETE FROM USERPASS WHERE USERNAME = :OLD.USERNAME;
END;
/

CREATE OR REPLACE TRIGGER EMPLOYEE_DELETE_TRIGGER
    BEFORE DELETE ON EMPLOYEE
    FOR EACH ROW
    BEGIN
        DELETE FROM USERPASS WHERE USERNAME = :OLD.USERNAME;
END;
/

CREATE OR REPLACE TRIGGER CUSTOMER_DELETE_TRIGGER
    BEFORE DELETE ON CUSTOMER
    FOR EACH ROW
    BEGIN
        DELETE FROM USERPASS WHERE USERNAME = :OLD.USERNAME;
        DELETE FROM ACCOUNT WHERE CUSTOMER = :OLD.ID;
END;
/

CREATE OR REPLACE TRIGGER ADMIN_UPDATE_TRIGGER
    BEFORE UPDATE ON ADMIN
    FOR EACH ROW
    BEGIN
        UPDATE USERPASS SET USERNAME = :NEW.USERNAME WHERE USERNAME = :OLD.USERNAME;
END;
/

CREATE OR REPLACE TRIGGER EMPLOYEE_UPDATE_TRIGGER
    BEFORE DELETE ON EMPLOYEE
    FOR EACH ROW
    BEGIN
        UPDATE USERPASS SET USERNAME = :NEW.USERNAME WHERE USERNAME = :OLD.USERNAME;
END;
/

CREATE OR REPLACE TRIGGER CUSTOMER_UPDATE_TRIGGER
    BEFORE DELETE ON CUSTOMER
    FOR EACH ROW
    BEGIN
        UPDATE USERPASS SET USERNAME = :NEW.USERNAME WHERE USERNAME = :OLD.USERNAME;
END;
/

--INSERT TEST DATABASE

INSERT INTO ADMIN(ID, USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES(null, 'gwash', 'passworda1', 'George', 'Washington');

INSERT INTO ADMIN(ID, USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES(null, 'tjeff', 'passworda2', 'Thomas', 'Jefferson');

INSERT INTO ADMIN(ID, USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES(null, 'alinc', 'passworda3', 'Abraham', 'Lincoln');

INSERT INTO ADMIN(ID, USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES(null, 'troos', 'passworda4', 'Theodore', 'Roosevelt');

INSERT INTO EMPLOYEE(USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES('jadam', 'passworde1', 'John', 'Adams');

INSERT INTO EMPLOYEE(USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES('jmadi', 'passworde2', 'James', 'Madison');

INSERT INTO EMPLOYEE(USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES('jmonr', 'passworde3', 'James', 'Monroe');

INSERT INTO EMPLOYEE(USERNAME, PASSWORD, FIRSTNAME, LASTNAME) VALUES('jqada', 'passworde4', 'John Q.', 'Adams');

INSERT INTO CUSTOMER(USERNAME, PASSWORD, FIRSTNAME, LASTNAME, EMPLOYEE) VALUES('bobam', 'passwordc1', 'Barack', 'Obama', 1);

INSERT INTO CUSTOMER(USERNAME, PASSWORD, FIRSTNAME, LASTNAME, EMPLOYEE) VALUES('jfken', 'passwordc2', 'John F.', 'Kennedy', 1);

INSERT INTO CUSTOMER(USERNAME, PASSWORD, FIRSTNAME, LASTNAME, EMPLOYEE) VALUES('rnixo', 'passwordc3', 'Richard', 'Nixon', 2);

INSERT INTO CUSTOMER(USERNAME, PASSWORD, FIRSTNAME, LASTNAME, EMPLOYEE) VALUES('ddeis', 'passwordc4', 'Dwight D.', 'Eisenhower', 3);

SELECT * FROM BANKING_APP.LOG;

COMMIT;

DISCONNECT;
EXIT;