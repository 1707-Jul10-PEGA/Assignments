DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEES CASCADE CONSTRAINTS;
DROP TABLE CATEGORY CASCADE CONSTRAINTS;
DROP TABLE ORDERS CASCADE CONSTRAINTS;
DROP TABLE ORDERITEM CASCADE CONSTRAINTS;
DROP TABLE SUPPLIER CASCADE CONSTRAINTS;


/* 1.1 CREATE A USER AND NAME IT "OfficeSupply"*/
CREATE USER OfficeSupply IDENTIFIED BY p4ssw0rd;
DROP USER OfficeSupply;
/* 1.2 Create a user and name it "OfficeSupply using DDL*/
CREATE USER OfficeSupply IDENTIFIED BY p4ssw0rd;
GRANT CREATE SESSION TO OfficeSupply;
GRANT CONNECT,DBA,RESOURCE TO OfficeSupply;
GRANT CREATE TABLE TO OfficeSupply;

/* 2.0 CREATE TABLES FOR OFFICE SUPPLY*/
CREATE TABLE EMPLOYEES(
    EmployeeID NUMBER NOT NULL,
    UserName VARCHAR2(20) NOT NULL,
    Password VARCHAR2(20) NOT NULL,
    Name VARCHAR2(25) NOT NULL,
    Department CHAR(2) NOT NULL,
    Manager NUMBER NOT NULL,
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EmployeeID));
    
CREATE TABLE ORDERS(
    ORDERID NUMBER NOT NULL,
    EMPLOYEEID NUMBER NOT NULL,
    ORDERDATE DATE NOT NULL,
    STATUS CHAR NOT NULL,
    CONSTRAINT PK_ORDERID PRIMARY KEY (ORDERID),
    CONSTRAINT FK_EMPLOYEEID FOREIGN KEY (EMPLOYEEID) REFERENCES employees (employeeid) ON DELETE CASCADE);
    
CREATE TABLE CATEGORY(
    CATID NUMBER NOT NULL,
    NAME VARCHAR2(80) NULL,
    DESCRIPT VARCHAR2(255) NULL,
    CONSTRAINT PK_CATID PRIMARY KEY (CATID));

CREATE TABLE SUPPLIER(
    SUPPLID NUMBER NOT NULL,
    NAME VARCHAR2(80) NULL,
    CONSTRAINT PK_SUPPLID PRIMARY KEY (SUPPLID));
    
CREATE TABLE PRODUCT(
    PRODUCTID VARCHAR2(20) NOT NULL,
    CATID NUMBER NOT NULL,
    NAME VARCHAR(80) NULL,
    DESCRIPT VARCHAR(255) NULL,
    UNITCOST NUMBER NULL,
    SUPPLID NUMBER NOT NULL,
    CONSTRAINT PK_PRODUCTID PRIMARY KEY (PRODUCTID),
    CONSTRAINT FK_CATID FOREIGN KEY (CATID) REFERENCES CATEGORY (CATID) ON DELETE CASCADE,
    CONSTRAINT FK_SUPPLID FOREIGN KEY (SUPPLID) REFERENCES SUPPLIER (SUPPLID) ON DELETE CASCADE);
    
CREATE TABLE ORDERITEM(
    ORDERID NUMBER NOT NULL,
    PRODUCTID VARCHAR2(20) NOT NULL,
    QUANTITY NUMBER NOT NULL,
    CONSTRAINT PK_ORDERID_PRODUCTID PRIMARY KEY (ORDERID,PRODUCTID),
    CONSTRAINT FK_ORDERID FOREIGN KEY (ORDERID) REFERENCES ORDERS (ORDERID) ON DELETE CASCADE, 
    CONSTRAINT FK_PRODUCTID FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT (PRODUCTID) ON DELETE CASCADE);
    
/* 2.1 Creating Relationships */

/* 3.0 Insert data to table*/
INSERT INTO EMPLOYEES VALUES(1,'dclark','drc','david clark','HR','0');
INSERT INTO EMPLOYEES VALUES(2,'jsmith','js','james smith','IT','1');
INSERT INTO EMPLOYEES VALUES(3,'mjones','mj','martha jones','HR','1');
INSERT INTO EMPLOYEES VALUES(4,'klink','kl','kevin link','IT','0');

INSERT INTO SUPPLIER VALUES(1,'XYZ Office Supplies');
INSERT INTO SUPPLIER VALUES(2,'ABC Office Products');

INSERT INTO CATEGORY VALUES(1,'Audio Visual','');
INSERT INTO CATEGORY VALUES(2,'Art Supplies','');
INSERT INTO CATEGORY VALUES(3,'Cleaning Supplies','');
INSERT INTO CATEGORY VALUES(4,'Computer Supplies','');
INSERT INTO CATEGORY VALUES(5,'Desk Accessories','');
INSERT INTO CATEGORY VALUES(6,'Writing Supplies','');
INSERT INTO CATEGORY VALUES(7,'Printer Supplies','');

INSERT INTO PRODUCT VALUES('ACM-10414',2,'Ruler','12 inch stainless steel', 3.79,2);
INSERT INTO PRODUCT VALUES('APO-CG7070',1,'Transparecy','Quick dry ink jet', 24.49,1);
INSERT INTO PRODUCT VALUES('APO-FXL',1,'Overhead Bulb','High intensity replacement bulb', 12.00,1);
INSERT INTO PRODUCT VALUES('APO-MP1200',1,'Laser Pointer','General purpose laser pointer',29.99 ,2);
INSERT INTO PRODUCT VALUES('BIN-68401',2,'Colored Pencils','Non toxic 12 pack', 2.84 ,1);
INSERT INTO PRODUCT VALUES('DRA-91249',3,'All-Purpose Cleaner','Use on all washable surfaces', 4.29 ,2);
INSERT INTO PRODUCT VALUES('FOH-28124',3,'Paper Hand Towels','320 sheets per roll', 5.25,1);
INSERT INTO PRODUCT VALUES('IMN-41143',4,'CD-R','700 mb with jewel case',1.09 ,1);
INSERT INTO PRODUCT VALUES('IMN-44766',4,'3.5 inch Disks','High Density Formatted Box of 10', 5.99,1);
INSERT INTO PRODUCT VALUES('KMW-12164',4,'Monitor Wipes','Non abrasive lint free', 6.99,2);
INSERT INTO PRODUCT VALUES('KMW-22256',4,'Dust Blaster','Ozone safe no CFCs', 8.99,2);
INSERT INTO PRODUCT VALUES('MMM-6200',2,'Clear Tape','1 inch wide 6 rolls', 3.90,1);
INSERT INTO PRODUCT VALUES('MMM-9700P',1,'Overhead Projector','Portable with travel cover', 759.97 ,1);
INSERT INTO PRODUCT VALUES('OIC-5000',2,'Glue stick','Oderless non toxic', 1.99,2);

/* 3.1 SELECT*/
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES WHERE Department='HR'; 
SELECT * FROM EMPLOYEES WHERE UserName='jsmith';
SELECT * FROM EMPLOYEES WHERE Manager='1';

/* 3.2 ORDER BY NAME */
SELECT NAME FROM PRODUCT ORDER BY NAME ASC;
SELECT NAME FROM PRODUCT ORDER BY NAME DESC;
SELECT * FROM CATEGORY ORDER BY NAME;

/* 3.3 INSERT INTO */
INSERT INTO EMPLOYEES VALUES(5,'cgastelum','123','carlos gastelum','IT','1');
INSERT INTO CATEGORY VALUES(8,'Food Supplies','');
INSERT INTO SUPPLIER VALUES(9,'Whole Foods');

/* 3.4 Update */
UPDATE PRODUCT SET UNITCOST=0.05 WHERE NAME='Ruler'; 
UPDATE CATEGORY SET DESCRIPT='SUPPLIES' WHERE NAME='Computer Supplies' OR NAME='Cleaning Supplies';

/* 3.5 LIKE */
SELECT USERNAME FROM EMPLOYEES WHERE USERNAME LIKE 'j%';
SELECT NAME FROM PRODUCT WHERE NAME LIKE 'O%';

/* 3.6 BETWEEN */
SELECT NAME FROM PRODUCT WHERE UNITCOST > 3 AND UNITCOST < 10;
SELECT NAME FROM PRODUCT WHERE UNITCOST > 500 AND UNITCOST < 800;

/* 3.7 DELETE */
DELETE FROM CATEGORY WHERE NAME='Audio visual';
DELETE FROM EMPLOYEES WHERE USERNAME='cgastelum';
DELETE FROM CATEGORY WHERE NAME='Food Supplies';
DELETE FROM SUPPLIER WHERE NAME='Whole Foods';

/* 4.1 System Defined Scalar Functions*/
/* RETURNS THE LENGTH OF LASER POINTER*/
SELECT LENGTH(NAME) INTO L_STRING FROM PRODUCT WHERE NAME='Laser Pointer';

/* CONVERTS A USERNAME IN THE EMPLOEES TABLE TO UPPERCASE*/
SELECT UPPER(USERNAME) INTO E_USERNAME FROM EMPLOYEES WHERE EMPLOYEEID=EMPLOYEE_ID;

/* 4.2 System Defined Aggregate Functions*/
/* RETURNS THE SUM OF UNITCOST FROM PRODUCT TABLE*/
SELECT SUM(UNITCOST) FROM PRODUCT;

/* RETURNS THE count of all products in the product table*/
SELECT COUNT(PRODUCTID) FROM PRODUCT;

/* 4.3 CREATE A FUNCTION THAT TAKES TWO INPUTS(UNIT PRICE OF PRODUCTS) AND CALCULATES THE COST OF THE TOW PRODUCTS*/
CREATE OR REPLACE FUNCTION CALCULATE_COST(PRODUCTID1 IN VARCHAR2,PRODUCTID2 IN VARCHAR2)
RETURN NUMBER AS
UNIT_COST_P1 NUMBER;
UNIT_COST_P2 NUMBER;
BEGIN
    SELECT UNITCOST INTO UNIT_COST_P1 FROM PRODUCT WHERE PRODUCTID=PRODUCTID1;
    SELECT UNITCOST INTO UNIT_COST_P2 FROM PRODUCT WHERE PRODUCTID=PRODUCTID2;
    RETURN UNIT_COST_P1 * UNIT_COST_P2;
END;
/

SELECT CALCULATE_COST('ACM-10414','APO-CG7070') FROM DUAL;

/* 4.4 Create function that returns whether or not a username belongs to a manager*/
CREATE OR REPLACE FUNCTION USERNAME_BELONG_MANAGER(UNAME IN VARCHAR2)
RETURN VARCHAR2 IS
CURSOR CURSOR_USERNAME IS SELECT USERNAME,MANAGER FROM EMPLOYEES;
BEGIN
    FOR I IN CURSOR_USERNAME LOOP
        IF I.USERNAME = UNAME AND I.MANAGER = 0 THEN
            RETURN 'TRUE';
        END IF;
    END LOOP;

    RETURN 'FALSE';
    
END;
/

SELECT USERNAME_BELONG_MANAGER('cgastelum') FROM DUAL;
SELECT USERNAME_BELONG_MANAGER('mjones') FROM DUAL;

/* 5.1 Returns all emploees with the username,dept, and manager columns from  the employees table. */
CREATE OR REPLACE PROCEDURE EMPLOYEES_PROCEDURE(EMPLOYEE_CURSOR OUT SYS_REFCURSOR) IS
BEGIN
    OPEN EMPLOYEE_CURSOR FOR SELECT USERNAME,DEPARTMENT,MANAGER FROM EMPLOYEES; 
END;
/

DECLARE
EMPLOYEE_CURSOR SYS_REFCURSOR;
E_USERNAME VARCHAR2(20);
E_DEPARTMENT CHAR(2);
E_MANAGER NUMBER;
BEGIN
    EMPLOYEES_PROCEDURE(EMPLOYEE_CURSOR);
    LOOP
        FETCH EMPLOYEE_CURSOR INTO E_USERNAME,E_DEPARTMENT,E_MANAGER;
    EXIT WHEN EMPLOYEE_CURSOR%NOTFOUND;
     DBMS_OUTPUT.PUT_LINE('USERNAME: ' || E_USERNAME || ' DEPT: ' || E_DEPARTMENT || ' HAS A MANAGER: ' || E_MANAGER);
    END LOOP;
END;
/



